[{"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js":"1","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js":"2","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js":"5","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js":"6","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js":"7","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js":"8","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js":"9","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js":"10","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js":"11","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js":"12","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js":"13","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js":"14","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js":"15","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js":"16","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js":"17","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js":"18","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js":"19","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js":"20","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js":"21","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js":"22","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js":"23"},{"size":435,"mtime":1607607822802,"results":"24","hashOfConfig":"25"},{"size":506,"mtime":1612133280808,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1606847084564,"results":"27","hashOfConfig":"25"},{"size":7220,"mtime":1613771822903,"results":"28","hashOfConfig":"25"},{"size":1391,"mtime":1613772810318,"results":"29","hashOfConfig":"25"},{"size":601,"mtime":1612875709005,"results":"30","hashOfConfig":"25"},{"size":8832,"mtime":1608335158106,"results":"31","hashOfConfig":"25"},{"size":2998,"mtime":1613763819931,"results":"32","hashOfConfig":"25"},{"size":9380,"mtime":1613776538779,"results":"33","hashOfConfig":"25"},{"size":5846,"mtime":1613772844052,"results":"34","hashOfConfig":"25"},{"size":1099,"mtime":1613766002465,"results":"35","hashOfConfig":"25"},{"size":12718,"mtime":1613772892555,"results":"36","hashOfConfig":"25"},{"size":1387,"mtime":1613763347996,"results":"37","hashOfConfig":"25"},{"size":13715,"mtime":1613754230549,"results":"38","hashOfConfig":"25"},{"size":1962,"mtime":1613763920189,"results":"39","hashOfConfig":"25"},{"size":2085,"mtime":1613763902162,"results":"40","hashOfConfig":"25"},{"size":2095,"mtime":1613763913614,"results":"41","hashOfConfig":"25"},{"size":766,"mtime":1613754247945,"results":"42","hashOfConfig":"25"},{"size":4131,"mtime":1613763887178,"results":"43","hashOfConfig":"25"},{"size":12955,"mtime":1613763783058,"results":"44","hashOfConfig":"25"},{"size":20275,"mtime":1613763460379,"results":"45","hashOfConfig":"25"},{"size":3172,"mtime":1613776044083,"results":"46","hashOfConfig":"25"},{"size":2986,"mtime":1613764606530,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vovu6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js",["103"],"import { useContext, useState, useEffect } from 'react';\r\nimport { Dropdown, Nav } from 'react-bootstrap';\r\nimport { NavLink, BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Axios from 'axios';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\nimport Inbox from './Inbox';\r\nimport Editor from './Editor';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Profil from './Profil';\r\nimport Register from './Register';\r\nimport Users from './Users';\r\nimport View from './View';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport Error403 from './Error403';\r\nimport ConfirmPanel from './ConfirmPanel';\r\nimport Postavke from './Postavke';\r\nimport Posts from './Posts';\r\nimport Post from './Post';\r\n\r\nconst Navbar = () => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [legalRoute, setLegalRoute] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (currentUser.loaded) {\r\n            checkLegalRoute().then(function (message) {\r\n                console.log(message);\r\n            })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [currentUser]);\r\n\r\n    //The set of functions that I want to call in order\r\n    function initialSet() {\r\n        var legalRouteList = [];\r\n        if (currentUser.loggedIn) {\r\n            switch (currentUser.authority) {\r\n                case 'user':\r\n                    legalRouteList = ['/home', '/posts', '/editor', '/login', '/register', '/inbox', '/profil', '/postavke'];\r\n                    break;\r\n                case 'admin':\r\n                    legalRouteList = ['/home', '/posts', '/editor', '/login', '/register', '/inbox', '/profil', '/postavke', '/users'];\r\n                    break;\r\n                case 'super-admin':\r\n                    legalRouteList = ['/home', '/posts', '/editor', '/login', '/register', '/inbox', '/profil', '/postavke', '/users', '/database'];\r\n                    break;\r\n                default:\r\n                    legalRouteList = ['/home', '/editor', '/login', '/register'];\r\n                    break;\r\n            }\r\n\r\n        }\r\n        else {\r\n            legalRouteList = ['/home', '/editor', '/login', '/register'];\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            resolve(legalRouteList)\r\n        })\r\n    }\r\n\r\n    function setRealValues(legalRouteList) {\r\n        var flag = true;\r\n        for (var i = 0; i < legalRouteList.length; i++) {\r\n            if (window.location.pathname === legalRouteList[i] || window.location.pathname.startsWith('/posts/')) {\r\n                flag = false;\r\n                setLegalRoute(true);\r\n                return new Promise(function (resolve, reject) {\r\n                    resolve(flag)\r\n                })\r\n            }\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            resolve(flag)\r\n        })\r\n    }\r\n\r\n    function validate(flag) {\r\n        var message = 'no redirect';\r\n        if (flag) {\r\n            setLegalRoute(false);\r\n            message = 'redirecting';\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            resolve(message);\r\n        })\r\n    }\r\n\r\n\r\n    function checkLegalRoute() {\r\n        return initialSet()\r\n            .then(setRealValues)\r\n            .then(validate)\r\n    }\r\n\r\n    function redirectReload(redirectPath) {\r\n        window.history.pushState({}, '', redirectPath);\r\n        return new Promise(function (resolve, reject) {\r\n            resolve();\r\n        })\r\n    }\r\n\r\n\r\n    function logout() {\r\n        Axios.get(url + '/logout').then((response) => {\r\n            redirectReload('/login').then((response) => {\r\n                //window.location.reload();\r\n            });\r\n            setLegalRoute(true);\r\n            setCurrentUser(response.data);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"blog-masthead break\">\r\n                <div className=\"container break\">\r\n                    <Nav className=\"d-flex justify-content-center row\">\r\n\r\n                        <View authority={currentUser.authority} />\r\n                        {currentUser.loggedIn\r\n                            ? <Dropdown className=\"dropdown open\">\r\n                                <Dropdown.Toggle className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <BootstrapIcon type={5} />\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenu1\">\r\n                                    <NavLink className=\"item-link dropdown-item\" to=\"/profil\"><BootstrapIcon type={6} /> Profil</NavLink>\r\n\r\n                                    <Dropdown.Divider className=\"dropdown-divider\"></Dropdown.Divider>\r\n                                    <NavLink to=\"/postavke\" className=\"item-link dropdown-item\"><BootstrapIcon type={7} /> Postavke</NavLink>\r\n\r\n                                    <Dropdown.Divider className=\"dropdown-divider\"></Dropdown.Divider>\r\n                                    <NavLink to=\"/login\" onClick={logout} className=\"item-link dropdown-item\"><BootstrapIcon type={8} /> Log Out</NavLink>\r\n\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                            : null\r\n                        }\r\n\r\n                    </Nav>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {window.location.pathname === '/' ? <Redirect to='/home' /> : null}\r\n                {legalRoute\r\n                    ? <div>\r\n                        {(currentUser.verified === 'no') ? <ConfirmPanel /> : ''}\r\n                        <Switch>\r\n                            <Route path='/home' component={Home}></Route>\r\n                            <Route exact path='/posts' component={Posts}></Route>\r\n                            <Route path='/posts/:id' render={(props) => <Post {...props} />}></Route>\r\n                            <Route path='/editor' component={Editor}></Route>\r\n                            <Route path='/users' component={Users}></Route>\r\n                            <Route path='/login' component={Login}></Route>\r\n                            <Route path='/register' component={Register}></Route>\r\n                            <Route path='/inbox' component={Inbox}></Route>\r\n                            <Route path='/profil' component={Profil}></Route>\r\n                            <Route path='/postavke' component={Postavke}></Route>\r\n                        </Switch>\r\n                    </div>\r\n                    : <Error403 path={window.location.pathname} />}\r\n                {currentUser.loggedIn && (window.location.pathname === '/login' || window.location.pathname === '/register') ? <Redirect to='/home' /> : null}\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js",["104","105"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js",["106"],"import { useContext, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AuthorityContext } from './AuthorityContext';\r\n\r\nconst Error403 = (props) => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    const [counter, setCounter] = useState(3);\r\n\r\n    useEffect(() => {\r\n        const timer =\r\n            counter > 0 && setInterval(() => setCounter(counter - 1), 1000);\r\n        return () => clearInterval(timer);\r\n    }, [counter]);\r\n\r\n    useEffect(() => {\r\n        if (counter <= 0) {\r\n            props.history.push(currentUser.loggedIn ? '/home' : '/login');\r\n            window.location.reload();\r\n        }\r\n    }, [counter]);\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div>\r\n                <h1>Error 403</h1>\r\n                <p>You do not have access to that page.</p>\r\n                <p>Redirecting to home page in {counter}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Error403);","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js",["107","108","109","110"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\n\r\nconst ConfirmPanel = () => {\r\n\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    let id = currentUser.id;\r\n    let email = currentUser.email;\r\n    const [sent, setSent] = useState(false);\r\n\r\n    function resendEmail() {\r\n        Axios.post(url + '/confirmation/send', {\r\n            id: id,\r\n            email: email\r\n        }).then(() => {\r\n            setSent(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"blog-header no-border no-margin\">\r\n            <div className=\"container btrans no-padding\">\r\n                <h4 className=\"text-center text-white\"><strong>Please confirm your email</strong></h4>\r\n                <h6 className=\"text-center\">\r\n                    {sent ? <strong><br></br> Check your email</strong>\r\n                        : <div>\r\n                            <strong>Didn't recieve an email?</strong>\r\n                            <button className=\"resendButton\" onClick={resendEmail}>Resend email</button>\r\n                        </div>}\r\n                </h6>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPanel;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js",["111","112"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport PROFILEICON from '../images/profile-icon.png';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nconst Users = () => {\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    function removeUser(userID) {\r\n        Axios.delete(url + '/remove-user', { data: { userID: userID } }).then((response) => {\r\n            console.log(response);\r\n            Axios.get(url + '/users').then((response) => {\r\n                setUserList([...response.data]);\r\n            });\r\n        });\r\n    }\r\n\r\n    function changeRole(newRole, userID) {\r\n        Axios.put(url + '/update-role', { data: { userID: userID, newRole: newRole } }).then((response) => {\r\n            console.log(response);\r\n            Axios.get(url + '/users').then((response) => {\r\n                setUserList([...response.data]);\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userList.map(user => {\r\n                    return (\r\n                        <div className=\"user-card btrans\" key={user.id}>\r\n                            <div className=\"profile-border display-inline\">\r\n                                <img alt=\"\" src={PROFILEICON} className=\"profile-icon\" />\r\n                            </div>\r\n                            <div className=\"profile-text display-inline\">\r\n                                <p>Username: {user.displayname}\r\n                                    <br />Email: {user.email}\r\n                                    <br />Role: [{user.authority}] <BootstrapIcon type={user.verified === 'verified' ? 18 : 19} />{user.verified === 'verified' ? 'verified' : 'not verified'}\r\n                                    <br />ID: {user.id}\r\n                                </p>\r\n                            </div>\r\n                            {currentUser.authority === 'super-admin'\r\n                                ? <div className=\"profile-buttons\">\r\n                                    {(user.authority === 'super-admin') ? null : <button onClick={() => { removeUser(user.id) }}>Remove</button>}\r\n                                    {(user.authority === 'super-admin') ? null\r\n                                        : <DropdownButton id={\"dropdown-basic-button\" + user.id} className=\"change-role\" title=\"Change Role\">\r\n                                            <Dropdown.Item disabled={user.authority === 'user'} onSelect={() => { changeRole('user', user.id) }}>User</Dropdown.Item>\r\n                                            <Dropdown.Item disabled={user.authority === 'admin'} onSelect={() => { changeRole('admin', user.id) }} >Admin</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    }\r\n                                    {(user.authority === 'super-admin') ? null : <button>Block Posts</button>}\r\n                                    <button>Send Message</button>\r\n                                </div>\r\n                                : <div className=\"profile-buttons\">\r\n                                    {(user.authority === 'admin' || user.authority === 'super-admin') ? null : <button onClick={() => { removeUser(user.id) }}>Remove</button>}\r\n                                    {(user.authority === 'admin' || user.authority === 'super-admin') ? null : <button>Block Posts</button>}\r\n                                    <button>Send Message</button>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js",["113","114","115","116"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { checkText } from 'smile2emoji';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\n\r\nconst Inbox = () => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [messagesRecieved, setMessagesRecieved] = useState([]);\r\n    const [messagesSent, setMessagesSent] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [chat, setChat] = useState({\r\n        other_id: null,\r\n        messages: []\r\n    })\r\n    const [username, setUsername] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [sentText, setSentText] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        updateMessages();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userList]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/messages-sent/' + currentUser.id).then((response) => {\r\n            setMessagesSent([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messagesRecieved]);\r\n\r\n    useEffect(() => {\r\n        setMessages([...mergeChunks(makeChunks(messagesRecieved, \"sender_id\"), makeChunks(removeSelfSent(messagesSent, messagesRecieved), \"reciever_id\"), \"sender_id\", \"reciever_id\")].sort(function (a, b) {\r\n            return b[0][\"id\"] - a[0][\"id\"];\r\n        }))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messagesSent]);\r\n\r\n    useEffect(() => {\r\n        findChat(chat.other_id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        if (document.getElementById('sendMessageInputID')) document.getElementById('sendMessageInputID').focus();\r\n        else if (document.getElementById('newMessageUsername')) document.getElementById('newMessageUsername').focus();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [chat]);\r\n\r\n    function findChat(otherID) {\r\n        if (otherID !== null) {\r\n            var i;\r\n            for (i = 0; i < messages.length; i++) {\r\n                if ((otherID === messages[i][0].sender_id) || (otherID === messages[i][0].reciever_id)) {\r\n                    setChat({\r\n                        other_id: otherID,\r\n                        messages: [...(messages[i])]\r\n                    })\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else console.log('otherID not found');\r\n    }\r\n\r\n    function findUsername(userID) {\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (userID === userList[i].id) return userList[i].displayname;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function findID(username) {\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (username.toLowerCase() === userList[i].username.toLowerCase()) return userList[i].id;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function updateMessages() {\r\n        Axios.get(url + '/messages/' + currentUser.id).then((response) => {\r\n            setMessagesRecieved([...response.data]);\r\n        });\r\n    }\r\n\r\n    function sendMessage() {\r\n        var currentChat = document.getElementById(\"currentChat\");\r\n        if (currentChat) {\r\n            currentChat.scrollTop = currentChat.scrollHeight;\r\n        }\r\n\r\n        var validUsername = 0;\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (username.toLowerCase() === userList[i].username.toLowerCase()) {\r\n                validUsername = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (validUsername === 1 && text !== '') {\r\n            Axios.post(url + '/send-message', { sender_id: currentUser.id, reciever_id: findID(username), text: text }).then((response) => {\r\n                console.log(response);\r\n                updateMessages();\r\n                setUsernameError('');\r\n            });\r\n        }\r\n        else {\r\n            updateMessages();\r\n            setUsernameError('User not found');\r\n        }\r\n    }\r\n\r\n    function replyFocus(usernameReply) {\r\n        document.getElementById('newMessageText').focus();\r\n        setUsername(usernameReply);\r\n        document.getElementById('newMessageUsername').value = usernameReply;\r\n    }\r\n\r\n    function deleteMessage(message_id) {\r\n        Axios.delete(url + '/remove-message', { data: { message_id: message_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function deleteAllRecieved(reciever_id) {\r\n        Axios.delete(url + '/remove-messages-recieved', { data: { reciever_id: reciever_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function deleteAllSent(sender_id) {\r\n        Axios.delete(url + '/remove-messages-sent', { data: { sender_id: sender_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function removeSelfSent(original) {\r\n        let removed_duplicate = [...original];\r\n        removed_duplicate = removed_duplicate.filter(message => message.sender_id !== message.reciever_id);\r\n        return removed_duplicate;\r\n    }\r\n\r\n    function makeChunks(array, property) {\r\n        let chunked_array = [];\r\n        let copied_array = [...array];\r\n        let current_element;\r\n        while (copied_array.length > 0) {\r\n            current_element = copied_array[0];\r\n            var new_chunk = [];\r\n            for (var i = 0; i < copied_array.length; i++) {\r\n                if (copied_array[i][property] === current_element[property]) {\r\n                    new_chunk.push(copied_array[i]);\r\n                    copied_array.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n            chunked_array.push(new_chunk);\r\n        }\r\n        return chunked_array;\r\n    }\r\n\r\n    function mergeChunks(array1, array2, property1, property2) { //merge where array1's elements property1 === array2's elements property2\r\n        let merged_array = [...array1];\r\n        let copied_array = [...array2];\r\n        let original_length = merged_array.length;\r\n        let found;\r\n        var i;\r\n        while (copied_array.length > 0) {\r\n            found = false;\r\n            for (i = 0; i < original_length; i++) {\r\n                if (merged_array[i][0][property1] === copied_array[0][0][property2]) {\r\n                    while (copied_array[0].length > 0) {\r\n                        merged_array[i].push(copied_array[0][0]);\r\n                        copied_array[0].splice(0, 1);\r\n                    }\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) merged_array.push(copied_array[0]);\r\n            copied_array.splice(0, 1);\r\n        }\r\n        for (i = 0; i < merged_array.length; i++) {\r\n            merged_array[i] = [...merged_array[i].sort(function (a, b) {\r\n                return b[\"id\"] - a[\"id\"];\r\n            })]\r\n        }\r\n        return merged_array;\r\n    }\r\n\r\n    function getNewMessages(array) {\r\n        let num = 0;\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (array[i].sender_id !== currentUser.id && !array[i].opened) num++;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    function openMessages(otherID) {\r\n        var currentChat = document.getElementById(\"currentChat\");\r\n        if (currentChat) currentChat.scrollTop = currentChat.scrollHeight;\r\n        Axios.put(url + '/open-messages', { data: { sender_id: otherID, reciever_id: currentUser.id } }).then((response) => {\r\n            updateMessages();\r\n            if (chat.other_id !== otherID) findChat(otherID);\r\n            setUsername(findUsername(otherID));\r\n        });\r\n    }\r\n\r\n    function newMessage() {\r\n        setChat({\r\n            other_id: null,\r\n            messages: []\r\n        });\r\n        setUsername('');\r\n        setUsernameError('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header\">\r\n                <div className=\"container btrans\">\r\n                    <h1 className=\"text-center\"><strong>Inbox</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container large-container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-lg-6 blog-main\">\r\n\r\n                        <div className=\"blog-post Poruke\">\r\n                            <p className=\"chat-name\">Razgovori: {messages.length}</p>\r\n                            <button className=\"sendButton newSend\" onClick={newMessage} name=\"button\"><BootstrapIcon type={20} />+</button>\r\n                            <hr className=\"round\" />\r\n                            {\r\n                                messages.map(messageChat => {\r\n                                    return (\r\n                                        <div className={getNewMessages(messageChat) ? 'message' : 'message opened'} onClick={() => { openMessages(messageChat[0].sender_id !== currentUser.id ? messageChat[0].sender_id : messageChat[0].reciever_id); }} key={messageChat[0].sender_id !== currentUser.id ? messageChat[0].sender_id : messageChat[0].reciever_id}>\r\n                                            <div className=\"message-text\">\r\n                                                {getNewMessages(messageChat) ?\r\n                                                    <div className=\"num-new-messages\">\r\n                                                        {getNewMessages(messageChat)}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <p className=\"timestamp\">{messageChat[0].date.substr(8, 2) + '/' + messageChat[0].date.substr(5, 2) + '/' + messageChat[0].date.substr(0, 4)} {messageChat[0].time}</p>\r\n                                                }\r\n                                                <p className=\"chat-name\">\r\n                                                    {messageChat[0].sender_id !== currentUser.id ? findUsername(messageChat[0].sender_id) : findUsername(messageChat[0].reciever_id)}\r\n                                                    {messageChat[0].sender_id === messageChat[0].reciever_id ? '[You]' : null}\r\n                                                </p>\r\n                                                <p className=\"last-text\">\r\n                                                    {findUsername(messageChat[0].sender_id)}: {messageChat[0].text}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    {chat.other_id === null\r\n                        ?\r\n                        <div className=\"col-lg-6 blog-main\">\r\n\r\n                            <div className=\"blog-post NovaPoruka\">\r\n                                <p>Nova poruka</p>\r\n                                <hr className=\"round\" />\r\n                                <Form acceptCharset=\"UTF-8\" onSubmit={(e) => { e.preventDefault(); if (usernameError === '') { e.target.reset(); if (username !== '') setSentText('Message sent'); setUsername(''); setText(''); openMessages(chat.messages); } }}>\r\n                                    <Form.Group controlId=\"newMessageUsername\">\r\n                                        <Form.Label srOnly>Prima:</Form.Label>\r\n                                        <InputGroup className=\"mb-2\">\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>Prima: </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control autoComplete=\"off\" type=\"username\" onChange={(e) => { setUsername(e.target.value); setSentText(''); }} placeholder=\"Enter username\" />\r\n                                        </InputGroup>\r\n                                        <Form.Text className=\"errorText\">{usernameError}</Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"newMessageText\">\r\n                                        <Form.Label>Text</Form.Label>\r\n                                        <Form.Control autoComplete=\"off\" as=\"textarea\" rows={5} onChange={(e) => { setText(checkText(e.target.value)); document.getElementById('newMessageText').value = checkText(e.target.value); setSentText(''); }} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"justify-content-center\">\r\n                                        <button className=\"resendButton\" type=\"submit\" onClick={sendMessage} name=\"button\">Send Message</button>\r\n                                        <Form.Text className=\"greenText\">{sentText}</Form.Text>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        : <div className=\"col-lg-6 blog-main\">\r\n\r\n                            <div className=\"blog-post Chat\">\r\n                                <div>\r\n                                    <p className=\"chat-name\">{findUsername(chat.other_id)}</p>\r\n                                    <hr className=\"round\" />\r\n                                </div>\r\n                                <div className=\"message Chat-messages\" id=\"currentChat\">\r\n                                    {\r\n                                        chat.messages.map(message => {\r\n                                            return (\r\n                                                <div className=\"message-text\" key={message.id}>\r\n                                                    <p className=\"timestamp\">{(message.opened && message.reciever_id !== currentUser.id) ? <BootstrapIcon type={16} /> : null} {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} {message.time}</p>\r\n\r\n                                                    <p className=\"chat-name\">\r\n                                                        {findUsername(message.sender_id)}\r\n                                                        {message.sender_id === currentUser.id ? '[You]' : null}\r\n                                                    :\r\n                                                    </p>\r\n\r\n                                                    <p>\r\n                                                        {message.text}\r\n                                                    </p>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <Form onSubmit={(e) => { sendMessage(); e.preventDefault(); e.target.reset(); setText(''); }}>\r\n                                    <Form.Group controlId=\"sendMessageInputID\" className=\"sendMessageGroup\">\r\n                                        <Form.Label srOnly>Message</Form.Label>\r\n                                        <InputGroup className=\"mb-2\">\r\n                                            <Form.Control autoComplete=\"off\" className=\"sendMessageInput\" type=\"text\" onChange={(e) => { setText(checkText(e.target.value)); document.getElementById('sendMessageInputID').value = checkText(e.target.value) }} placeholder=\"Nova poruka...\" />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"sendButtonGroup\">\r\n                                        <button className=\"sendButton\" type=\"submit\" name=\"button\"><BootstrapIcon type={20} /></button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {null/*\r\n                <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-lg-4 blog-main\">\r\n\r\n                    <div className=\"blog-post Poruke\">\r\n                        <p>Broj novih poruka: {messagesRecieved.length}</p>\r\n                        <hr className=\"round\" />\r\n                        <button onClick={() => { deleteAllRecieved(currentUser.id) }}>Delete All</button>\r\n                        {\r\n                            messagesRecieved.map(message => {\r\n                                return (\r\n                                    <div className={message.opened ? 'message opened' : 'message'} key={message.id}>\r\n                                        <p>From: {findUsername(message.sender_id)}\r\n                                            <br />Date: {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} at {message.time}</p>\r\n                                        <div className=\"message-text\">\r\n                                            <p>\r\n                                                {message.text}\r\n                                            </p>\r\n                                        </div>\r\n                                        <button onClick={() => { replyFocus(findUsername(message.sender_id)) }}>Reply</button>\r\n                                        <button onClick={() => { deleteMessage(message.id) }}>Delete</button>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-lg-4 blog-main\">\r\n\r\n                    <div className=\"blog-post Poruke\">\r\n                        <p>Poslano: {messagesSent.length}</p>\r\n                        <hr className=\"round\" />\r\n                        <button onClick={() => { deleteAllSent(currentUser.id) }}>Delete All</button>\r\n                        {\r\n                            messagesSent.map(message => {\r\n                                return (\r\n                                    <div className='message' key={message.id}>\r\n                                        <p>To: {findUsername(message.reciever_id)}\r\n                                            <br />Date: {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} at {message.time}</p>\r\n                                        <div className=\"message-text\">\r\n                                            <p>\r\n                                                {message.text}\r\n                                            </p>\r\n                                        </div>\r\n                                        <button onClick={() => { deleteMessage(message.id) }}>Delete</button>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js",["117"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js",["118","119","120"],"import { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { Redirect } from 'react-router';\r\nimport Error403 from './Error403';\r\n\r\nconst Post = (props) => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [post, setPost] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const loadPost = () => {\r\n        if (currentUser.loggedIn) {\r\n            Axios.get(url + '/posts/' + props.match.params.id).then((response) => {\r\n                console.log(response);\r\n                setPost(response.data[0]);\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        console.log(currentUser.loggedIn);\r\n        loadPost();\r\n    }, [currentUser]);\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-12 blog-main\">\r\n\r\n                    <div className=\"blog-post PostLarge\">\r\n                        {isLoading ?\r\n                            <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                            : (post && post.view === 'public') ?\r\n                                <div className=\"postLargeContainer\">\r\n                                    <div className=\"postHeader\">\r\n                                        <p className=\"timestamp\">{post.date.substr(8, 2) + '/' + post.date.substr(5, 2) + '/' + post.date.substr(0, 4)} {post.time}</p>\r\n                                        <p>Posted by: {post.displayname}<br />[{post.view}]</p>\r\n                                    </div>\r\n                                    <div className=\"postPhotoContainer\">\r\n                                        <Image\r\n                                            cloudName={'rt-foto-editor'}\r\n                                            publicId={post.public_id}\r\n                                            width=\"500\"\r\n                                            crop=\"scale\"\r\n                                            className=\"postImage\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"postDescription\">\r\n                                        <p>{post.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":73,"column":36,"nodeType":"127","messageId":"128","endLine":75,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":1,"column":16,"nodeType":"131","messageId":"132","endLine":1,"endColumn":19},{"ruleId":"129","severity":1,"message":"133","line":2,"column":20,"nodeType":"131","messageId":"132","endLine":2,"endColumn":29},{"ruleId":"134","severity":1,"message":"135","line":21,"column":8,"nodeType":"136","endLine":21,"endColumn":17,"suggestions":"137"},{"ruleId":"129","severity":1,"message":"133","line":1,"column":32,"nodeType":"131","messageId":"132","endLine":1,"endColumn":41},{"ruleId":"129","severity":1,"message":"138","line":7,"column":12,"nodeType":"131","messageId":"132","endLine":7,"endColumn":20},{"ruleId":"129","severity":1,"message":"139","line":7,"column":22,"nodeType":"131","messageId":"132","endLine":7,"endColumn":33},{"ruleId":"129","severity":1,"message":"140","line":7,"column":48,"nodeType":"131","messageId":"132","endLine":7,"endColumn":62},{"ruleId":"129","severity":1,"message":"141","line":1,"column":10,"nodeType":"131","messageId":"132","endLine":1,"endColumn":18},{"ruleId":"129","severity":1,"message":"140","line":9,"column":48,"nodeType":"131","messageId":"132","endLine":9,"endColumn":62},{"ruleId":"129","severity":1,"message":"142","line":133,"column":14,"nodeType":"131","messageId":"132","endLine":133,"endColumn":24},{"ruleId":"129","severity":1,"message":"143","line":139,"column":14,"nodeType":"131","messageId":"132","endLine":139,"endColumn":27},{"ruleId":"129","severity":1,"message":"144","line":146,"column":14,"nodeType":"131","messageId":"132","endLine":146,"endColumn":31},{"ruleId":"129","severity":1,"message":"145","line":153,"column":14,"nodeType":"131","messageId":"132","endLine":153,"endColumn":27},{"ruleId":"134","severity":1,"message":"146","line":27,"column":8,"nodeType":"136","endLine":27,"endColumn":21,"suggestions":"147"},{"ruleId":"129","severity":1,"message":"148","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":18},{"ruleId":"129","severity":1,"message":"149","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":16},{"ruleId":"134","severity":1,"message":"150","line":29,"column":8,"nodeType":"136","endLine":29,"endColumn":21,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'flag'.","FunctionExpression","unsafeRefs","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.loggedIn' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["154"],"'userList' is assigned a value but never used.","'setUserList' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'useState' is defined but never used.","'replyFocus' is defined but never used.","'deleteMessage' is defined but never used.","'deleteAllRecieved' is defined but never used.","'deleteAllSent' is defined but never used.","React Hook useEffect has a missing dependency: 'loadImages'. Either include it or remove the dependency array.",["155"],"'Redirect' is defined but never used.","'Error403' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPost'. Either include it or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [counter, currentUser.loggedIn, props.history]",{"range":"163","text":"164"},"Update the dependencies array to be: [currentUser, loadImages]",{"range":"165","text":"166"},"Update the dependencies array to be: [currentUser, loadPost]",{"range":"167","text":"168"},[749,758],"[counter, currentUser.loggedIn, props.history]",[975,988],"[currentUser, loadImages]",[1065,1078],"[currentUser, loadPost]"]