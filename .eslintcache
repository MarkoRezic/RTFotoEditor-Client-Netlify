[{"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js":"1","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js":"2","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js":"5","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js":"6","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js":"7","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js":"8","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js":"9","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js":"10","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js":"11","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js":"12","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js":"13","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js":"14","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js":"15","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js":"16","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js":"17","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js":"18","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js":"19","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js":"20","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js":"21","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js":"22","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js":"23"},{"size":435,"mtime":1607607822802,"results":"24","hashOfConfig":"25"},{"size":506,"mtime":1612133280808,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1606847084564,"results":"27","hashOfConfig":"25"},{"size":7245,"mtime":1613765034387,"results":"28","hashOfConfig":"25"},{"size":1474,"mtime":1613763946882,"results":"29","hashOfConfig":"25"},{"size":601,"mtime":1612875709005,"results":"30","hashOfConfig":"25"},{"size":8832,"mtime":1608335158106,"results":"31","hashOfConfig":"25"},{"size":2998,"mtime":1613763819931,"results":"32","hashOfConfig":"25"},{"size":8581,"mtime":1613763402115,"results":"33","hashOfConfig":"25"},{"size":5922,"mtime":1613763519211,"results":"34","hashOfConfig":"25"},{"size":1929,"mtime":1613765290402,"results":"35","hashOfConfig":"25"},{"size":12754,"mtime":1613763857250,"results":"36","hashOfConfig":"25"},{"size":1387,"mtime":1613763347996,"results":"37","hashOfConfig":"25"},{"size":13715,"mtime":1613754230549,"results":"38","hashOfConfig":"25"},{"size":1962,"mtime":1613763920189,"results":"39","hashOfConfig":"25"},{"size":2085,"mtime":1613763902162,"results":"40","hashOfConfig":"25"},{"size":2095,"mtime":1613763913614,"results":"41","hashOfConfig":"25"},{"size":766,"mtime":1613754247945,"results":"42","hashOfConfig":"25"},{"size":4131,"mtime":1613763887178,"results":"43","hashOfConfig":"25"},{"size":12955,"mtime":1613763783058,"results":"44","hashOfConfig":"25"},{"size":20275,"mtime":1613763460379,"results":"45","hashOfConfig":"25"},{"size":2650,"mtime":1613764741194,"results":"46","hashOfConfig":"25"},{"size":2986,"mtime":1613764606530,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1vovu6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\index.js",[],["101","102"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\App.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Navbar.js",["103"],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\AuthorityContext.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\View.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Home.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Profil.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Editor.js",["104","105"],"import { Form, Row } from 'react-bootstrap';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { checkText } from 'smile2emoji';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nconst Editor = () => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [fileInputState, setFileInputState] = useState('');\r\n    const [previewSource, setPreviewSource] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [postView, setPostView] = useState('Public');\r\n\r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type.match('image.*')) {\r\n            previewFile(file);\r\n            setFileInputState(e.target.value);\r\n        }\r\n        else {\r\n            setFileInputState('');\r\n            setPreviewSource('');\r\n        }\r\n    }\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setPreviewSource(reader.result);\r\n        }\r\n    }\r\n\r\n    const postFile = (e) => {\r\n        console.log('submitting');\r\n        e.preventDefault();\r\n        if (!previewSource) return;\r\n        postImage(previewSource);\r\n    }\r\n\r\n    const postImage = (base64EncodedImage) => {\r\n        Axios.post(url + '/image/upload/post', {\r\n            data: base64EncodedImage,\r\n            userID: currentUser.id,\r\n            description: description,\r\n            view: postView\r\n        }).then((response) => {\r\n            console.log(response);\r\n            setFileInputState('');\r\n            setPreviewSource('');\r\n            setDescription('');\r\n            setPostView('Public');\r\n            if (document.getElementById('fileUploadForm')) document.getElementById('fileUploadForm').reset();\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header\">\r\n                <div className=\"container btrans\">\r\n                    <h1 className=\"text-center\"><strong>Foto Editor</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-12 blog-main\">\r\n\r\n                        <div className=\"blog-post\">\r\n                            <Form acceptCharset=\"UTF-8\" onSubmit={postFile} id=\"fileUploadForm\">\r\n                                <Form.Group>\r\n                                    <Form.File accept=\"image/x-png,image/gif,image/jpeg\" value={fileInputState} onChange={handleFileInputChange} className=\"fileUpload\" id=\"fileUploadID\" name=\"image\" label=\"Upload photo\" />\r\n                                </Form.Group>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-1 holder-buttons\">\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                        <button type=\"button\" name=\"button\" className=\"edit-button\"></button>\r\n                                    </div>\r\n                                    <div className=\"col-6 placeholder\">\r\n                                        {previewSource && (\r\n                                            <img src={previewSource} alt=\"selected file\" className=\"previewSource\" />\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"col-4 holder-sliders\">\r\n                                        <div className=\"d-flex justify-content-center my-4\">\r\n                                            <span className=\"mr-2 mt-0 white-text\">0</span>\r\n                                            <form className=\"range-field w-100\">\r\n                                                <input className=\"border-0 slider\" type=\"range\" min=\"0\" max=\"255\" />\r\n                                            </form>\r\n                                            <span className=\"ml-2 mt-0 white-text\">255</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex justify-content-center my-4\">\r\n                                            <span className=\"mr-2 mt-0 white-text\">0</span>\r\n                                            <form className=\"range-field w-100\">\r\n                                                <input className=\"border-0 slider\" type=\"range\" min=\"0\" max=\"255\" />\r\n                                            </form>\r\n                                            <span className=\"ml-2 mt-0 white-text\">255</span>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex justify-content-center my-4\">\r\n                                            <span className=\"mr-2 mt-0 white-text\">0</span>\r\n                                            <form className=\"range-field w-100\">\r\n                                                <input className=\"border-0 slider\" type=\"range\" min=\"0\" max=\"255\" />\r\n                                            </form>\r\n                                            <span className=\"ml-2 mt-0 white-text\">255</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <hr className=\"round\" />\r\n                                {currentUser.loggedIn ?\r\n                                    <div>\r\n                                        <Form.Group controlId=\"newPostDescription\">\r\n                                            <Form.Label>Description</Form.Label>\r\n                                            <Form.Control autoComplete=\"off\" as=\"textarea\" rows={5} onChange={(e) => { setDescription(checkText(e.target.value)); document.getElementById('newPostDescription').value = checkText(e.target.value); }} />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"postButtonHolder\">\r\n                                            <button type=\"submit\" name=\"button\" className=\"genericButton\">Post</button>\r\n                                        </Form.Group>\r\n                                        <DropdownButton className=\"changePostView\" title={postView}>\r\n                                            <Dropdown.Item onSelect={() => { setPostView('Public') }}>Public</Dropdown.Item>\r\n                                            <Dropdown.Item onSelect={() => { setPostView('Friends') }} >Friends</Dropdown.Item>\r\n                                            <Dropdown.Item onSelect={() => { setPostView('Private') }} >Private</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                            </Form>\r\n                            <hr className=\"round\" />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"blog-post\">\r\n                            <h5 className=\"w\">Link Vizije</h5>\r\n                            <p className=\"blog-post-meta\">Zadnje ažurirano 8. studenog 2020. <strong> <a className=\"alink\" href=\"https://docs.google.com/document/d/141DHijMdyPfeffnDDo_hYwJRKfGQT5NC6UDfMsEDl3Y/edit?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">Vizija</a> </strong></p>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Editor;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Login.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Error403.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Register.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\ConfirmPanel.js",["106","107","108","109"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\n\r\nconst ConfirmPanel = () => {\r\n\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    let id = currentUser.id;\r\n    let email = currentUser.email;\r\n    const [sent, setSent] = useState(false);\r\n\r\n    function resendEmail() {\r\n        Axios.post(url + '/confirmation/send', {\r\n            id: id,\r\n            email: email\r\n        }).then(() => {\r\n            setSent(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"blog-header no-border no-margin\">\r\n            <div className=\"container btrans no-padding\">\r\n                <h4 className=\"text-center text-white\"><strong>Please confirm your email</strong></h4>\r\n                <h6 className=\"text-center\">\r\n                    {sent ? <strong><br></br> Check your email</strong>\r\n                        : <div>\r\n                            <strong>Didn't recieve an email?</strong>\r\n                            <button className=\"resendButton\" onClick={resendEmail}>Resend email</button>\r\n                        </div>}\r\n                </h6>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConfirmPanel;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\svg icons\\BootstrapIcon.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\UserView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\AdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\SuperAdminView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\views\\GuestView.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Users.js",["110","111"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport PROFILEICON from '../images/profile-icon.png';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nconst Users = () => {\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    function removeUser(userID) {\r\n        Axios.delete(url + '/remove-user', { data: { userID: userID } }).then((response) => {\r\n            console.log(response);\r\n            Axios.get(url + '/users').then((response) => {\r\n                setUserList([...response.data]);\r\n            });\r\n        });\r\n    }\r\n\r\n    function changeRole(newRole, userID) {\r\n        Axios.put(url + '/update-role', { data: { userID: userID, newRole: newRole } }).then((response) => {\r\n            console.log(response);\r\n            Axios.get(url + '/users').then((response) => {\r\n                setUserList([...response.data]);\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                userList.map(user => {\r\n                    return (\r\n                        <div className=\"user-card btrans\" key={user.id}>\r\n                            <div className=\"profile-border display-inline\">\r\n                                <img alt=\"\" src={PROFILEICON} className=\"profile-icon\" />\r\n                            </div>\r\n                            <div className=\"profile-text display-inline\">\r\n                                <p>Username: {user.displayname}\r\n                                    <br />Email: {user.email}\r\n                                    <br />Role: [{user.authority}] <BootstrapIcon type={user.verified === 'verified' ? 18 : 19} />{user.verified === 'verified' ? 'verified' : 'not verified'}\r\n                                    <br />ID: {user.id}\r\n                                </p>\r\n                            </div>\r\n                            {currentUser.authority === 'super-admin'\r\n                                ? <div className=\"profile-buttons\">\r\n                                    {(user.authority === 'super-admin') ? null : <button onClick={() => { removeUser(user.id) }}>Remove</button>}\r\n                                    {(user.authority === 'super-admin') ? null\r\n                                        : <DropdownButton id={\"dropdown-basic-button\" + user.id} className=\"change-role\" title=\"Change Role\">\r\n                                            <Dropdown.Item disabled={user.authority === 'user'} onSelect={() => { changeRole('user', user.id) }}>User</Dropdown.Item>\r\n                                            <Dropdown.Item disabled={user.authority === 'admin'} onSelect={() => { changeRole('admin', user.id) }} >Admin</Dropdown.Item>\r\n                                        </DropdownButton>\r\n                                    }\r\n                                    {(user.authority === 'super-admin') ? null : <button>Block Posts</button>}\r\n                                    <button>Send Message</button>\r\n                                </div>\r\n                                : <div className=\"profile-buttons\">\r\n                                    {(user.authority === 'admin' || user.authority === 'super-admin') ? null : <button onClick={() => { removeUser(user.id) }}>Remove</button>}\r\n                                    {(user.authority === 'admin' || user.authority === 'super-admin') ? null : <button>Block Posts</button>}\r\n                                    <button>Send Message</button>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Postavke.js",[],"C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Inbox.js",["112","113","114","115"],"import { useState, useContext, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Form, InputGroup } from 'react-bootstrap';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { checkText } from 'smile2emoji';\r\nimport BootstrapIcon from '../svg icons/BootstrapIcon';\r\n\r\nconst Inbox = () => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [messagesRecieved, setMessagesRecieved] = useState([]);\r\n    const [messagesSent, setMessagesSent] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n    const [chat, setChat] = useState({\r\n        other_id: null,\r\n        messages: []\r\n    })\r\n    const [username, setUsername] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [sentText, setSentText] = useState('');\r\n    const [usernameError, setUsernameError] = useState('');\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/users').then((response) => {\r\n            setUserList([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentUser]);\r\n\r\n    useEffect(() => {\r\n        updateMessages();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userList]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(url + '/messages-sent/' + currentUser.id).then((response) => {\r\n            setMessagesSent([...response.data]);\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messagesRecieved]);\r\n\r\n    useEffect(() => {\r\n        setMessages([...mergeChunks(makeChunks(messagesRecieved, \"sender_id\"), makeChunks(removeSelfSent(messagesSent, messagesRecieved), \"reciever_id\"), \"sender_id\", \"reciever_id\")].sort(function (a, b) {\r\n            return b[0][\"id\"] - a[0][\"id\"];\r\n        }))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messagesSent]);\r\n\r\n    useEffect(() => {\r\n        findChat(chat.other_id);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        if (document.getElementById('sendMessageInputID')) document.getElementById('sendMessageInputID').focus();\r\n        else if (document.getElementById('newMessageUsername')) document.getElementById('newMessageUsername').focus();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [chat]);\r\n\r\n    function findChat(otherID) {\r\n        if (otherID !== null) {\r\n            var i;\r\n            for (i = 0; i < messages.length; i++) {\r\n                if ((otherID === messages[i][0].sender_id) || (otherID === messages[i][0].reciever_id)) {\r\n                    setChat({\r\n                        other_id: otherID,\r\n                        messages: [...(messages[i])]\r\n                    })\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else console.log('otherID not found');\r\n    }\r\n\r\n    function findUsername(userID) {\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (userID === userList[i].id) return userList[i].displayname;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function findID(username) {\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (username.toLowerCase() === userList[i].username.toLowerCase()) return userList[i].id;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    function updateMessages() {\r\n        Axios.get(url + '/messages/' + currentUser.id).then((response) => {\r\n            setMessagesRecieved([...response.data]);\r\n        });\r\n    }\r\n\r\n    function sendMessage() {\r\n        var currentChat = document.getElementById(\"currentChat\");\r\n        if (currentChat) {\r\n            currentChat.scrollTop = currentChat.scrollHeight;\r\n        }\r\n\r\n        var validUsername = 0;\r\n        for (var i = 0; i < userList.length; i++) {\r\n            if (username.toLowerCase() === userList[i].username.toLowerCase()) {\r\n                validUsername = 1;\r\n                break;\r\n            }\r\n        }\r\n        if (validUsername === 1 && text !== '') {\r\n            Axios.post(url + '/send-message', { sender_id: currentUser.id, reciever_id: findID(username), text: text }).then((response) => {\r\n                console.log(response);\r\n                updateMessages();\r\n                setUsernameError('');\r\n            });\r\n        }\r\n        else {\r\n            updateMessages();\r\n            setUsernameError('User not found');\r\n        }\r\n    }\r\n\r\n    function replyFocus(usernameReply) {\r\n        document.getElementById('newMessageText').focus();\r\n        setUsername(usernameReply);\r\n        document.getElementById('newMessageUsername').value = usernameReply;\r\n    }\r\n\r\n    function deleteMessage(message_id) {\r\n        Axios.delete(url + '/remove-message', { data: { message_id: message_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function deleteAllRecieved(reciever_id) {\r\n        Axios.delete(url + '/remove-messages-recieved', { data: { reciever_id: reciever_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function deleteAllSent(sender_id) {\r\n        Axios.delete(url + '/remove-messages-sent', { data: { sender_id: sender_id } }).then((response) => {\r\n            console.log(response);\r\n            updateMessages();\r\n        });\r\n    }\r\n\r\n    function removeSelfSent(original) {\r\n        let removed_duplicate = [...original];\r\n        removed_duplicate = removed_duplicate.filter(message => message.sender_id !== message.reciever_id);\r\n        return removed_duplicate;\r\n    }\r\n\r\n    function makeChunks(array, property) {\r\n        let chunked_array = [];\r\n        let copied_array = [...array];\r\n        let current_element;\r\n        while (copied_array.length > 0) {\r\n            current_element = copied_array[0];\r\n            var new_chunk = [];\r\n            for (var i = 0; i < copied_array.length; i++) {\r\n                if (copied_array[i][property] === current_element[property]) {\r\n                    new_chunk.push(copied_array[i]);\r\n                    copied_array.splice(i, 1);\r\n                    i--;\r\n                }\r\n            }\r\n            chunked_array.push(new_chunk);\r\n        }\r\n        return chunked_array;\r\n    }\r\n\r\n    function mergeChunks(array1, array2, property1, property2) { //merge where array1's elements property1 === array2's elements property2\r\n        let merged_array = [...array1];\r\n        let copied_array = [...array2];\r\n        let original_length = merged_array.length;\r\n        let found;\r\n        var i;\r\n        while (copied_array.length > 0) {\r\n            found = false;\r\n            for (i = 0; i < original_length; i++) {\r\n                if (merged_array[i][0][property1] === copied_array[0][0][property2]) {\r\n                    while (copied_array[0].length > 0) {\r\n                        merged_array[i].push(copied_array[0][0]);\r\n                        copied_array[0].splice(0, 1);\r\n                    }\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) merged_array.push(copied_array[0]);\r\n            copied_array.splice(0, 1);\r\n        }\r\n        for (i = 0; i < merged_array.length; i++) {\r\n            merged_array[i] = [...merged_array[i].sort(function (a, b) {\r\n                return b[\"id\"] - a[\"id\"];\r\n            })]\r\n        }\r\n        return merged_array;\r\n    }\r\n\r\n    function getNewMessages(array) {\r\n        let num = 0;\r\n        for (var i = 0; i < array.length; i++) {\r\n            if (array[i].sender_id !== currentUser.id && !array[i].opened) num++;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    function openMessages(otherID) {\r\n        var currentChat = document.getElementById(\"currentChat\");\r\n        if (currentChat) currentChat.scrollTop = currentChat.scrollHeight;\r\n        Axios.put(url + '/open-messages', { data: { sender_id: otherID, reciever_id: currentUser.id } }).then((response) => {\r\n            updateMessages();\r\n            if (chat.other_id !== otherID) findChat(otherID);\r\n            setUsername(findUsername(otherID));\r\n        });\r\n    }\r\n\r\n    function newMessage() {\r\n        setChat({\r\n            other_id: null,\r\n            messages: []\r\n        });\r\n        setUsername('');\r\n        setUsernameError('');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header\">\r\n                <div className=\"container btrans\">\r\n                    <h1 className=\"text-center\"><strong>Inbox</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container large-container\">\r\n                <div className=\"row justify-content-center\">\r\n\r\n                    <div className=\"col-lg-6 blog-main\">\r\n\r\n                        <div className=\"blog-post Poruke\">\r\n                            <p className=\"chat-name\">Razgovori: {messages.length}</p>\r\n                            <button className=\"sendButton newSend\" onClick={newMessage} name=\"button\"><BootstrapIcon type={20} />+</button>\r\n                            <hr className=\"round\" />\r\n                            {\r\n                                messages.map(messageChat => {\r\n                                    return (\r\n                                        <div className={getNewMessages(messageChat) ? 'message' : 'message opened'} onClick={() => { openMessages(messageChat[0].sender_id !== currentUser.id ? messageChat[0].sender_id : messageChat[0].reciever_id); }} key={messageChat[0].sender_id !== currentUser.id ? messageChat[0].sender_id : messageChat[0].reciever_id}>\r\n                                            <div className=\"message-text\">\r\n                                                {getNewMessages(messageChat) ?\r\n                                                    <div className=\"num-new-messages\">\r\n                                                        {getNewMessages(messageChat)}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <p className=\"timestamp\">{messageChat[0].date.substr(8, 2) + '/' + messageChat[0].date.substr(5, 2) + '/' + messageChat[0].date.substr(0, 4)} {messageChat[0].time}</p>\r\n                                                }\r\n                                                <p className=\"chat-name\">\r\n                                                    {messageChat[0].sender_id !== currentUser.id ? findUsername(messageChat[0].sender_id) : findUsername(messageChat[0].reciever_id)}\r\n                                                    {messageChat[0].sender_id === messageChat[0].reciever_id ? '[You]' : null}\r\n                                                </p>\r\n                                                <p className=\"last-text\">\r\n                                                    {findUsername(messageChat[0].sender_id)}: {messageChat[0].text}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n                    {chat.other_id === null\r\n                        ?\r\n                        <div className=\"col-lg-6 blog-main\">\r\n\r\n                            <div className=\"blog-post NovaPoruka\">\r\n                                <p>Nova poruka</p>\r\n                                <hr className=\"round\" />\r\n                                <Form acceptCharset=\"UTF-8\" onSubmit={(e) => { e.preventDefault(); if (usernameError === '') { e.target.reset(); if (username !== '') setSentText('Message sent'); setUsername(''); setText(''); openMessages(chat.messages); } }}>\r\n                                    <Form.Group controlId=\"newMessageUsername\">\r\n                                        <Form.Label srOnly>Prima:</Form.Label>\r\n                                        <InputGroup className=\"mb-2\">\r\n                                            <InputGroup.Prepend>\r\n                                                <InputGroup.Text>Prima: </InputGroup.Text>\r\n                                            </InputGroup.Prepend>\r\n                                            <Form.Control autoComplete=\"off\" type=\"username\" onChange={(e) => { setUsername(e.target.value); setSentText(''); }} placeholder=\"Enter username\" />\r\n                                        </InputGroup>\r\n                                        <Form.Text className=\"errorText\">{usernameError}</Form.Text>\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId=\"newMessageText\">\r\n                                        <Form.Label>Text</Form.Label>\r\n                                        <Form.Control autoComplete=\"off\" as=\"textarea\" rows={5} onChange={(e) => { setText(checkText(e.target.value)); document.getElementById('newMessageText').value = checkText(e.target.value); setSentText(''); }} />\r\n                                    </Form.Group>\r\n                                    <Form.Group className=\"justify-content-center\">\r\n                                        <button className=\"resendButton\" type=\"submit\" onClick={sendMessage} name=\"button\">Send Message</button>\r\n                                        <Form.Text className=\"greenText\">{sentText}</Form.Text>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        : <div className=\"col-lg-6 blog-main\">\r\n\r\n                            <div className=\"blog-post Chat\">\r\n                                <div>\r\n                                    <p className=\"chat-name\">{findUsername(chat.other_id)}</p>\r\n                                    <hr className=\"round\" />\r\n                                </div>\r\n                                <div className=\"message Chat-messages\" id=\"currentChat\">\r\n                                    {\r\n                                        chat.messages.map(message => {\r\n                                            return (\r\n                                                <div className=\"message-text\" key={message.id}>\r\n                                                    <p className=\"timestamp\">{(message.opened && message.reciever_id !== currentUser.id) ? <BootstrapIcon type={16} /> : null} {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} {message.time}</p>\r\n\r\n                                                    <p className=\"chat-name\">\r\n                                                        {findUsername(message.sender_id)}\r\n                                                        {message.sender_id === currentUser.id ? '[You]' : null}\r\n                                                    :\r\n                                                    </p>\r\n\r\n                                                    <p>\r\n                                                        {message.text}\r\n                                                    </p>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                                <Form onSubmit={(e) => { sendMessage(); e.preventDefault(); e.target.reset(); setText(''); }}>\r\n                                    <Form.Group controlId=\"sendMessageInputID\" className=\"sendMessageGroup\">\r\n                                        <Form.Label srOnly>Message</Form.Label>\r\n                                        <InputGroup className=\"mb-2\">\r\n                                            <Form.Control autoComplete=\"off\" className=\"sendMessageInput\" type=\"text\" onChange={(e) => { setText(checkText(e.target.value)); document.getElementById('sendMessageInputID').value = checkText(e.target.value) }} placeholder=\"Nova poruka...\" />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group className=\"sendButtonGroup\">\r\n                                        <button className=\"sendButton\" type=\"submit\" name=\"button\"><BootstrapIcon type={20} /></button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {null/*\r\n                <div className=\"row justify-content-center\">\r\n\r\n                <div className=\"col-lg-4 blog-main\">\r\n\r\n                    <div className=\"blog-post Poruke\">\r\n                        <p>Broj novih poruka: {messagesRecieved.length}</p>\r\n                        <hr className=\"round\" />\r\n                        <button onClick={() => { deleteAllRecieved(currentUser.id) }}>Delete All</button>\r\n                        {\r\n                            messagesRecieved.map(message => {\r\n                                return (\r\n                                    <div className={message.opened ? 'message opened' : 'message'} key={message.id}>\r\n                                        <p>From: {findUsername(message.sender_id)}\r\n                                            <br />Date: {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} at {message.time}</p>\r\n                                        <div className=\"message-text\">\r\n                                            <p>\r\n                                                {message.text}\r\n                                            </p>\r\n                                        </div>\r\n                                        <button onClick={() => { replyFocus(findUsername(message.sender_id)) }}>Reply</button>\r\n                                        <button onClick={() => { deleteMessage(message.id) }}>Delete</button>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-lg-4 blog-main\">\r\n\r\n                    <div className=\"blog-post Poruke\">\r\n                        <p>Poslano: {messagesSent.length}</p>\r\n                        <hr className=\"round\" />\r\n                        <button onClick={() => { deleteAllSent(currentUser.id) }}>Delete All</button>\r\n                        {\r\n                            messagesSent.map(message => {\r\n                                return (\r\n                                    <div className='message' key={message.id}>\r\n                                        <p>To: {findUsername(message.reciever_id)}\r\n                                            <br />Date: {message.date.substr(8, 2) + '/' + message.date.substr(5, 2) + '/' + message.date.substr(0, 4)} at {message.time}</p>\r\n                                        <div className=\"message-text\">\r\n                                            <p>\r\n                                                {message.text}\r\n                                            </p>\r\n                                        </div>\r\n                                        <button onClick={() => { deleteMessage(message.id) }}>Delete</button>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inbox;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Posts.js",["116"],"import { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Posts = () => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [posts, setPosts] = useState();\r\n    const loadImages = () => {\r\n        Axios.get(url + '/posts/public').then((response) => {\r\n            console.log(response);\r\n            setPosts(response.data);\r\n        });\r\n    };\r\n    useEffect(() => {\r\n        loadImages();\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"blog-header\">\r\n                <div className=\"container btrans\">\r\n                    <h1 className=\"text-center\"><strong> Posts</strong></h1>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-sm-12 blog-main\">\r\n\r\n                        <div className=\"blog-post Posts\">\r\n                            <hr className=\"round\" />\r\n                            <div className=\"centeredContainer\">\r\n                                {posts &&\r\n                                    posts.map((post) => (\r\n                                        <div className=\"postContainer\" key={post.id}>\r\n                                            <p>{post.displayname}</p>\r\n                                            <NavLink to={'posts/' + post.id} className=\"postThumbnailContainer\">\r\n                                                <Image\r\n                                                    cloudName={'rt-foto-editor'}\r\n                                                    publicId={post.public_id}\r\n                                                    width=\"300\"\r\n                                                    crop=\"scale\"\r\n                                                    className=\"postThumbnailImage\"\r\n                                                />\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                            <hr className=\"round\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;","C:\\Users\\Reza\\Desktop\\Datoteke\\Razvoj Web Aplikacija\\RTFotoEditor HEROKU\\client\\src\\components\\Post.js",["117","118","119"],"import { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport { Image } from 'cloudinary-react';\r\nimport { AuthorityContext } from './AuthorityContext';\r\nimport { Redirect } from 'react-router';\r\nimport Error403 from './Error403';\r\n\r\nconst Post = (props) => {\r\n    // eslint-disable-next-line\r\n    const [userList, setUserList, currentUser, setCurrentUser] = useContext(AuthorityContext);\r\n    Axios.defaults.withCredentials = true;\r\n    let url = 'https://rt-foto-editor.herokuapp.com';\r\n    //let url = 'http://localhost:3001';\r\n\r\n    const [post, setPost] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const loadPost = () => {\r\n        if (currentUser.loggedIn) {\r\n            Axios.get(url + '/posts/' + props.match.params.id).then((response) => {\r\n                console.log(response);\r\n                setPost(response.data[0]);\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        console.log(currentUser.loggedIn);\r\n        loadPost();\r\n    }, [currentUser]);\r\n\r\n    return (\r\n\r\n        <div className=\"container\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-12 blog-main\">\r\n\r\n                    <div className=\"blog-post PostLarge\">\r\n                        {isLoading ?\r\n                            <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                            : (post && post.view === 'public') ?\r\n                                <div className=\"postLargeContainer\">\r\n                                    <div className=\"postHeader\">\r\n                                        <p className=\"timestamp\">{post.date.substr(8, 2) + '/' + post.date.substr(5, 2) + '/' + post.date.substr(0, 4)} {post.time}</p>\r\n                                        <p>Posted by: {post.displayname}<br />[{post.view}]</p>\r\n                                    </div>\r\n                                    <div className=\"postPhotoContainer\">\r\n                                        <Image\r\n                                            cloudName={'rt-foto-editor'}\r\n                                            publicId={post.public_id}\r\n                                            width=\"500\"\r\n                                            crop=\"scale\"\r\n                                            className=\"postImage\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"postDescription\">\r\n                                        <p>{post.description}</p>\r\n                                    </div>\r\n                                </div>\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":71,"column":36,"nodeType":"126","messageId":"127","endLine":73,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"132","line":2,"column":20,"nodeType":"130","messageId":"131","endLine":2,"endColumn":29},{"ruleId":"128","severity":1,"message":"132","line":1,"column":32,"nodeType":"130","messageId":"131","endLine":1,"endColumn":41},{"ruleId":"128","severity":1,"message":"133","line":7,"column":12,"nodeType":"130","messageId":"131","endLine":7,"endColumn":20},{"ruleId":"128","severity":1,"message":"134","line":7,"column":22,"nodeType":"130","messageId":"131","endLine":7,"endColumn":33},{"ruleId":"128","severity":1,"message":"135","line":7,"column":48,"nodeType":"130","messageId":"131","endLine":7,"endColumn":62},{"ruleId":"128","severity":1,"message":"136","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"135","line":9,"column":48,"nodeType":"130","messageId":"131","endLine":9,"endColumn":62},{"ruleId":"128","severity":1,"message":"137","line":133,"column":14,"nodeType":"130","messageId":"131","endLine":133,"endColumn":24},{"ruleId":"128","severity":1,"message":"138","line":139,"column":14,"nodeType":"130","messageId":"131","endLine":139,"endColumn":27},{"ruleId":"128","severity":1,"message":"139","line":146,"column":14,"nodeType":"130","messageId":"131","endLine":146,"endColumn":31},{"ruleId":"128","severity":1,"message":"140","line":153,"column":14,"nodeType":"130","messageId":"131","endLine":153,"endColumn":27},{"ruleId":"141","severity":1,"message":"142","line":23,"column":8,"nodeType":"143","endLine":23,"endColumn":21,"suggestions":"144"},{"ruleId":"128","severity":1,"message":"145","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"128","severity":1,"message":"146","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":16},{"ruleId":"141","severity":1,"message":"147","line":29,"column":8,"nodeType":"143","endLine":29,"endColumn":21,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'flag'.","FunctionExpression","unsafeRefs","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'userList' is assigned a value but never used.","'setUserList' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","'useState' is defined but never used.","'replyFocus' is defined but never used.","'deleteMessage' is defined but never used.","'deleteAllRecieved' is defined but never used.","'deleteAllSent' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadImages'. Either include it or remove the dependency array.","ArrayExpression",["151"],"'Redirect' is defined but never used.","'Error403' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPost'. Either include it or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [currentUser, loadImages]",{"range":"157","text":"158"},"Update the dependencies array to be: [currentUser, loadPost]",{"range":"159","text":"160"},[813,826],"[currentUser, loadImages]",[1065,1078],"[currentUser, loadPost]"]